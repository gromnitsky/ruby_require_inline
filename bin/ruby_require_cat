#!/usr/bin/env ruby

require 'optparse'

require 'ruby_parser'

require_relative '../lib/ruby_require_inline/version'

$conf = {
  banner: "Usage: #{File.basename $0} [-o output] [input]",
  output: $stdout,
  input: $stdin
}



def usage ec = 0
  stream = ec == 0 ? $stdout : $stderr
  stream.puts $conf[:banner]
  exit ec
end

def parse_line line
  return nil unless line
  return nil if line[0] == '/'  # skip 1st entry
  line.strip!
  return nil if line.match(/\(not local\?\)$/)

  line
end



opt_parser = OptionParser.new do |opts|
  opts.banner = $conf[:banner]

  opts.on("-o FILE", "Output file instead of stdout") do |arg|
    $conf[:output] = arg
  end
  opts.on("-V", "--version", "Version info") do
    puts RubyRequireInline::VERSION
    exit 0
  end
end

begin
  opt_parser.parse!
rescue OptionParser::InvalidOption => e
  $stderr.puts e
  usage 1
end

$conf[:input] = File.open ARGV[0] if ARGV.size > 0



while line = gets

  file = parse_line line
  next unless file

  if $conf[:output] != $stdout && !$conf[:output].is_a?(IO)
    $conf[:output] = File.open $conf[:output], 'w+'
  end

  code = File.read file

  $conf[:output].printf "%s\n%s%s%s\n\n", \
  "\# === BEGIN #{file} ===", \
  code,
  code[-1] == "\n" ? "" : "\n",
  "\# === END #{file} ==="
end
